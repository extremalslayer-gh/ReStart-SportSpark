document.addEventListener("DOMContentLoaded", function () {
    fetchReports();
});

function fetchReports() {
    fetch("/reports/get_my_reports/", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({})
    })
    .then(response => response.json())
    .then(data => {
        const reports = data.reports;
        const grid = document.getElementById("reportsGrid");
        grid.innerHTML = ""; // очистка на случай повторной загрузки

        reports.forEach((report, index) => {
            const date = new Date(report.organization.creation_time).toLocaleDateString("ru-RU");
            if (report.organization.is_autogenerated) {
	            return;
            }
            const reportId = report.organization.id;

            const card = document.createElement("div");
            card.className = "report-card";

            card.innerHTML = `
                <a href='/sentreport'><div class="report-icon">
                    <img src="/static/settingurl/img/Eye.png" onclick="setReportId('${reportId}')">
                </div></a>
                <span class="report-date">${date}</span>
                <a href='block_student_edit'>
                    <button class="edit-btn" onclick="setReportId('${reportId}')">✎</button>
                </a>
            `;

            grid.appendChild(card);
        });
    })
    .catch(error => {
        console.error("Ошибка при получении отчетов:", error);
    });
}

function setReportId(reportId) {
    localStorage.setItem("report_id", reportId);
    // Можно добавить переход или другое действие, например:
    // window.location.href = "/report/edit/";
}


// Обработчик нажатия на ✎, с переходом на страницу редактирования
document.getElementById("reportsGrid").addEventListener('click', function (event) {
    if (event.target.classList.contains('edit-btn')) {
        const reportId = event.target.getAttribute('data-id');
        const editUrl = document.querySelector('.main-content').dataset.editUrl;

        //localStorage.setItem('report_id', reportId);
        window.location.href = editUrl;
    }
});



document.addEventListener('DOMContentLoaded', () => {
    const profileIcon = document.getElementById('profile-icon');
    const profileMenu = document.getElementById('profile-menu');

    profileIcon.addEventListener('click', (e) => {
        e.stopPropagation();
        profileMenu.classList.toggle('hidden');
    });

    document.addEventListener('click', () => {
        if (!profileMenu.classList.contains('hidden')) {
            profileMenu.classList.add('hidden');
        }
    });
});
